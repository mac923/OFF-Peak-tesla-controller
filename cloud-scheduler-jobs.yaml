# Cloud Scheduler Jobs dla Tesla Monitor - Optymalizacja kosztów
# Harmonogram wywołań aplikacji Tesla Monitor w Cloud Run

# UWAGA: Przed wdrożeniem zastąp:
# - YOUR_PROJECT_ID - rzeczywistym ID projektu Google Cloud
# - YOUR_CLOUD_RUN_URL - rzeczywistym URL usługi Cloud Run (np. https://tesla-monitor-74pl3bqokq-ew.a.run.app)

# 1. Harmonogram dzienny (07:00-22:59 czasu warszawskiego) - co 15 minut
apiVersion: cloudscheduler.googleapis.com/v1
kind: Job
metadata:
  name: tesla-monitor-day-cycle
  project: YOUR_PROJECT_ID
spec:
  schedule: "*/15 7-22 * * *"  # Co 15 minut między 07:00-22:59 czasu warszawskiego
  timeZone: "Europe/Warsaw"
  description: "Tesla Monitor - dzienny cykl monitorowania (co 15 min)"
  httpTarget:
    uri: "YOUR_CLOUD_RUN_URL/run-cycle"
    httpMethod: POST
    headers:
      Content-Type: "application/json"
      User-Agent: "Google-Cloud-Scheduler"
    body: |
      {
        "trigger": "cloud_scheduler_day",
        "interval": "15min",
        "time_range": "07:00-22:59_Warsaw"
      }
    oidcToken:
      serviceAccountEmail: "YOUR_PROJECT_ID@appspot.gserviceaccount.com"
  retryConfig:
    retryCount: 3
    maxRetryDuration: "300s"
    minBackoffDuration: "5s"
    maxBackoffDuration: "30s"
  attemptDeadline: "60s"

---

# 2. Harmonogram nocny (23:00-06:59 czasu warszawskiego) - co 60 minut
apiVersion: cloudscheduler.googleapis.com/v1
kind: Job
metadata:
  name: tesla-monitor-night-cycle
  project: YOUR_PROJECT_ID
spec:
  schedule: "0 23,0-6 * * *"  # Co godzinę między 23:00-06:59 czasu warszawskiego
  timeZone: "Europe/Warsaw"
  description: "Tesla Monitor - nocny cykl monitorowania (co 60 min)"
  httpTarget:
    uri: "YOUR_CLOUD_RUN_URL/run-cycle"
    httpMethod: POST
    headers:
      Content-Type: "application/json"
      User-Agent: "Google-Cloud-Scheduler"
    body: |
      {
        "trigger": "cloud_scheduler_night",
        "interval": "60min",
        "time_range": "23:00-06:59_Warsaw"
      }
    oidcToken:
      serviceAccountEmail: "YOUR_PROJECT_ID@appspot.gserviceaccount.com"
  retryConfig:
    retryCount: 3
    maxRetryDuration: "300s"
    minBackoffDuration: "5s"
    maxBackoffDuration: "30s"
  attemptDeadline: "60s"

---

# 3. Nocne wybudzenie pojazdu (00:00 czasu warszawskiego - zawsze o północy)
apiVersion: cloudscheduler.googleapis.com/v1
kind: Job
metadata:
  name: tesla-monitor-midnight-wake
  project: YOUR_PROJECT_ID
spec:
  schedule: "0 0 * * *"  # Codziennie o 00:00 czasu warszawskiego (północ)
  timeZone: "Europe/Warsaw"
  description: "Tesla Monitor - nocne wybudzenie pojazdu (00:00 warszawa)"
  httpTarget:
    uri: "YOUR_CLOUD_RUN_URL/run-midnight-wake"
    httpMethod: POST
    headers:
      Content-Type: "application/json"
      User-Agent: "Google-Cloud-Scheduler"
    body: |
      {
        "trigger": "cloud_scheduler_midnight",
        "action": "wake_vehicle",
        "time": "00:00_Warsaw"
      }
    oidcToken:
      serviceAccountEmail: "YOUR_PROJECT_ID@appspot.gserviceaccount.com"
  retryConfig:
    retryCount: 2
    maxRetryDuration: "180s"
    minBackoffDuration: "10s"
    maxBackoffDuration: "60s"
  attemptDeadline: "120s" 